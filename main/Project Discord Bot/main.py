import random
from typing import Any

from discord.interactions import Interaction
import settings
import discord
import aiosqlite
import traceback
# import utils
import typing
import enum
from datetime import datetime
from discord.ext import commands
from discord import app_commands



logger = settings.logging.getLogger("bot")

class colors:
    RESET = '\033[0m'
    RED = '\033[91m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    BLUE = '\033[94m'
    PURPLE = '\033[95m'
    CYAN = '\033[96m'

class Days(enum.Enum):
    MONDAY = 1
    TUESDAY = 2
    WEDNESDAY = 3
    THURSDAY = 4
    FRIDAY = 5
    SATURDAY = 6
    SUNDAY = 7


class RegisterModal(discord.ui.Modal, title='Register'):
    std_id = discord.ui.TextInput(label='Student ID', placeholder='ex: 64XXXXXX', style=discord.TextStyle.short, max_length=8)
    name_th = discord.ui.TextInput(label='‡∏ä‡∏∑‡πà‡∏≠ - ‡∏™‡∏Å‡∏∏‡∏•', placeholder='ex: ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ', style=discord.TextStyle.short, max_length=100)
    name_en = discord.ui.TextInput(label='Full Name', placeholder='ex: Somchai Jaidee', style=discord.TextStyle.short, max_length=100)
    tel_num = discord.ui.TextInput(label='‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)', placeholder='ex: 08XXXXXXXX', style=discord.TextStyle.short, max_length=10, required=False)
    e_mail = discord.ui.TextInput(label='E-mail  (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)', placeholder='ex: example@gmail.com', style=discord.TextStyle.short, max_length=100, required=False)
    async def on_submit(self, interaction : discord.Interaction):

        channel = interaction.guild.get_channel(settings.FEEDBACK_CH) #‡∏î‡∏∂‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°

        
        embed1 = discord.Embed(
            title="Register success!!",
            description="**‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /register ‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á**",
            color=discord.Color.green()
        )
        embed1.add_field(
            name=f'{self.std_id.label}',
            value=f'{self.std_id.value}',
            inline=False #‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà
        )
        embed1.add_field(
            name=f'{self.name_th.label}',
            value=f'{self.name_th.value}',
        )
        embed1.add_field(
            name=f'{self.name_en.label}',
            value=f'{self.name_en.value}',
            inline=False
        )
        embed1.add_field(
            name=f'{self.tel_num.label}',
            value=f'{self.tel_num.value}',
            inline=False
        )
        embed1.add_field(
            name=f'{self.e_mail.label}',
            value=f'{self.e_mail.value}',
            inline=False
        )       
        embed1.set_thumbnail(url=self.user.avatar) #‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
        embed1.set_author(name=self.user.display_name) #‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

        #‡∏î‡∏∂‡∏á‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
        guild = interaction.guild
        member = guild.get_member(interaction.user.id)

        role_id_1 = 1203950522952851526  # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î id ‡∏Ç‡∏≠‡∏á role

        # ‡∏î‡∏∂‡∏á role ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        role_1 = discord.utils.get(guild.roles, id=role_id_1)
        
        await member.add_roles(role_1) #‡∏Å‡∏≥‡∏´‡∏ô‡∏î role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        
        std_email = (f'{self.std_id.value}@kmitl.ac.th') #‡πÄ‡∏°‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤

        #await channel.send(embed=embed)
        await interaction.response.send_message(embed=embed1, ephemeral=True) #‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÉ‡∏ô embed
        print(std_email)
        #await interaction.response.send_message('‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /register ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç', ephemeral=True)

        async def on_error(self, interaction : discord.Interaction, error):
            ...


class GroupworkView(discord.ui.View):
    def __init__(self, topic: str, descriptions: str, member_amount: int, member: str):
        super().__init__()

        self.topic = topic
        self.member_amount = member_amount
        self.descriptions = descriptions
        

        self.member = member
        
        # self.sub = sub
        self.sub = len(self.member)
        self.remaining =  member_amount - self.sub 

        self.embed = discord.Embed(
            title=f'üì¢   {topic}   üìå',
            description=f"‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô : **{member_amount}** ‡∏Ñ‡∏ô"+
                        f"\n‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å : **{self.remaining}** ‡∏Ñ‡∏ô"+
                        f"\n\n**üìÉ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î**"+
                        f"\n{self.descriptions}",
            color=discord.Color.random()
        )
        
        self.embed.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1209079987152494642/Icons-Land-Vista-People-Groups-Meeting-Dark.256.png?ex=65e59e7c&is=65d3297c&hm=8906a84729e8df490124a4c04236270f4390a1d9eb2d11a9d410fd44c958ae57&') #‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ

        self.update_embed()


    def update_embed(self):
        self.embed.remove_field(0)
        member_list_with_numbers = [f"{index + 1}. {self.member[index]}" for index in range(len(self.member))]
        self.embed.add_field(
            name='üë§ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
            # value='\n'.join(f"{self.member[item]}" for item in range(len(self.member))),
            value='\n'.join(member_list_with_numbers),
            inline=False
        )    
        

    @discord.ui.button(label='Join', style=discord.ButtonStyle.green)
    async def join(self, interaction: discord.Interaction, button: discord.ui.Button):
        new_member_name = str(interaction.user.display_name)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ new_member_name ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô self.member ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if new_member_name not in self.member:
            self.member.append(new_member_name)

            if self.remaining > 0:
                testg = GroupworkView(self.topic, self.descriptions, self.member_amount, self.member)
                testg.update_embed()
                await interaction.response.edit_message(embed=testg.embed, view=testg)
            else:
                button.disabled = True
                await interaction.response.edit_message(embed=self.embed, view=self)

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ñ‡∏£‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
            if self.remaining == 1:
                mention_string = ' '.join([f'<@{interaction.guild.get_member_named(member_name).id}>' for member_name in self.member])
                await interaction.followup.send(f'üéâ ‡∏Å‡∏•‡∏∏‡πà‡∏° **"{self.topic}"** ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!! üéâ {mention_string}')

        else:
            await interaction.response.edit_message(embed=self.embed, view=self)
            await interaction.followup.send(f'‡∏Ñ‡∏∏‡∏ì **{new_member_name}** ‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏° **"{self.topic}"** ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß', ephemeral=True)



    @discord.ui.button(label='Leave', style=discord.ButtonStyle.red)
    async def leave(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.sub > 0:
            button.disabled = False
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ interaction.user.display_name ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô self.member ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if str(interaction.user.display_name) in self.member:
                self.member.remove(str(interaction.user.display_name))  # ‡∏•‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Leave ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å self.member
            testg = GroupworkView(self.topic, self.descriptions, self.member_amount, self.member)
            await interaction.response.edit_message(embed=testg.embed, view=testg)
        else:
            button.disabled = True
            await interaction.response.edit_message(embed=self.embed, view=self)
            
            
        
    async def on_timeout(self):
        # Cleanup logic if needed
        pass


class StudyPlanEmbed(discord.ui.View):
    def __init__(self, day_name: str, start_time: str, end_time: str, subject: str):
        super().__init__()

        self.embed = discord.Embed(
            title='Study Plan',
            description="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î",
            color=discord.Color.green(),
        )
        self.embed.add_field(
            name=day_name,
            value=f'   {start_time} ‡∏ô. - {end_time} ‡∏ô. | {subject}',
            inline=False
        )       


class ProfileView(discord.ui.View):
    def __init__(self, of: discord.Member):
        super().__init__()
        
        self.embed = discord.Embed(
            title=f'Profile',
            description=f"Name : {of.display_name}"+
                        f"\nUsername : {of.name}",
            color=discord.Color.green(),
        )
        self.embed.add_field(
            name='ID',
            value=f'{of.id}',
            inline=False
        )
        # self.embed.add_field(
        #     name='E-mail',
        #     value=f'{of.display_name}@gmail.com',
        #     inline=False
        # )
        self.embed.set_thumbnail(url=of.avatar)

    async def on_timeout(self):
        # Cleanup logic if needed
        pass
   



def run():
    intents = discord.Intents.all()
    # intents.message_content = True  #‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    # intents.members = True

    bot = commands.Bot(command_prefix="!", intents=intents)


    @bot.event
    async def on_ready():#‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
        logger.info(f"User: {bot.user} (ID: {bot.user.id})")

        #‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á guilds ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏≠‡∏¢‡∏π‡πà
        for guild in bot.guilds:
            logger.info(f'Guild Name: {guild.name} (ID: {guild.id})')

        await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.playing, name="Discord"))#‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
        print(colors.GREEN + '.'*32 +'Bot is started' + '.'*32 + colors.RESET)
       
        #load cogs
        for cogs_file in settings.COGS_DIR.glob("*.py"):
            if cogs_file != "__init__.py":
                await bot.load_extension(f"cogs.{cogs_file.name[:-3]}") #‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏≠‡∏Å
                print(colors.BLUE + 'import : ' + colors.RESET + f' {cogs_file}' + colors.GREEN + '  success' + colors.RESET)
                
        
                
        # for slashcommands_file in settings.SLASHCOMMANDS_DIR.glob("*.py"):
        #     if slashcommands_file != "__init__.py":
        #         await bot.load_extension(f"slashcommands.{slashcommands_file.name[:-3]}")                    #‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ
        #         print('import slash_cmds success')
                

        # for cmd_file in settings.CMDS_DIR.glob("*.py"):
        #     if cmd_file.name != "__init__.py":
        #         await bot.load_extension(f"cmds.{cmd_file.name[:-3]}")
        #         print(f'import {cmd_file} success')

        
        #sync slash commands global
        # try:
        #     synced = await bot.tree.sync()
        #     print(f'synced {len(synced)} commands')
        # except Exception as e:
        #     print(e)
            
        #sync slash commands guild
        bot.tree.copy_global_to(guild=settings.GUILDS_ID)
        await bot.tree.sync(guild=settings.GUILDS_ID)
            

        #connect database
        # bot.db = await aiosqlite.connect('Main.db')
        # c = await bot.db.cursor()
        # await c.execute("CREATE TABLE IF NOT EXISTS users(user_id INTEGER)")
        # await bot.db.commit()

        # print(list(bot.guilds))

        print(colors.YELLOW + '...................Bot is working Press Ctrl+c for stop Bot...................' + colors.RESET)

#function update bot data
    async def update_bot():
        list(bot)

#context menu zone

    @bot.tree.context_menu(name="View Profile")
    async def get_profile(interaction: discord.Interaction, of : discord.Member):
        view = ProfileView(of)
        await update_bot #‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó
        await interaction.response.send_message(embed=view.embed, view=view, ephemeral=True)
    

#slash commands zone

    #register
    @bot.tree.command(description='Register for New member | ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà') 
    async def register(interaction: discord.Interaction):
        FEEDBACK_CH = [1187345770400194654] #‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏ä‡∏•‡πÅ‡∏ô‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
        valid_channel = interaction.channel_id in FEEDBACK_CH

        if not valid_channel and FEEDBACK_CH:
            await interaction.response.send_message("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
            return

        register_modal = RegisterModal()
        register_modal.user = interaction.user
        await interaction.response.send_modal(register_modal)
    # @bot.tree.command(description='Register for New member | ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà') #‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
    # async def register(interaction : discord.Interaction):
    #     register_modal = RegisterModal()
    #     register_modal.user = interaction.user
    #     channel = interaction.guild.get_channel(settings.FEEDBACK_CH) #‡∏î‡∏∂‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    #     if settings.FEEDBACK_CH and interaction.channel_id != settings.FEEDBACK_CH:
    #         await interaction.response.send_message("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
    #     else:
    #         await interaction.response.send_modal(register_modal) #‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î channel ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
        


    #profile
    @bot.tree.command(description='View profile | ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ')
    @app_commands.describe(of='‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î')
    async def profile(interaction: discord.Interaction, of: discord.Member):
        FEEDBACK_CH = [] #‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏ä‡∏•‡πÅ‡∏ô‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
        valid_channel = interaction.channel_id in FEEDBACK_CH

        if not valid_channel and FEEDBACK_CH:
            await interaction.response.send_message("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
            return
        
        view = ProfileView(of) #‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å
        await interaction.response.send_message(embed=view.embed, view=view, ephemeral=True) #‡πÅ‡∏™‡∏î‡∏á embed ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô ProfileView ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á of ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
            
        

    #study_plan
    @bot.tree.command(description='Manage study plan | ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô')
    @app_commands.choices(
        day=[
            app_commands.Choice(name="üî¥ Sunday - ‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", value="1"),
            app_commands.Choice(name="üü° Monday - ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", value="2"), 
            app_commands.Choice(name="ü©∑ Tuesday - ‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", value="3"),
            app_commands.Choice(name="üü¢ Wednesday - ‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò", value="4"),
            app_commands.Choice(name="üü† Thursday - ‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", value="5"),
            app_commands.Choice(name="üîµ Friday - ‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå", value="6"),
            app_commands.Choice(name="üü£ Saturday - ‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå", value="7"),
        ])
    @app_commands.describe(day='‡∏ß‡∏±‡∏ô', start='‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô **EX. 09.00**', until='‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô **EX. 18.00**', subject='‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤')
    async def study_plan_edit(interaction: discord.Interaction, day: app_commands.Choice[str], start: str, until: str, subject: str):

        FEEDBACK_CH = [] #‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏ä‡∏•‡πÅ‡∏ô‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
        valid_channel = interaction.channel_id in FEEDBACK_CH

        if not valid_channel and FEEDBACK_CH:
            await interaction.response.send_message("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
            return

        study_plan_embed = StudyPlanEmbed(day.name, start, until, subject)
        await interaction.response.send_message(embed=study_plan_embed.embed, view=study_plan_embed)

    @bot.tree.command(description='View study plan | ‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô')
    @app_commands.choices(
        day=[
            app_commands.Choice(name="üìÖ ALL days - ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô", value="8"),
            app_commands.Choice(name="üî¥ Sunday - ‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", value="1"),
            app_commands.Choice(name="üü° Monday - ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", value="2"), 
            app_commands.Choice(name="ü©∑ Tuesday - ‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", value="3"),
            app_commands.Choice(name="üü¢ Wednesday - ‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò", value="4"),
            app_commands.Choice(name="üü† Thursday - ‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", value="5"),
            app_commands.Choice(name="üîµ Friday - ‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå", value="6"),
            app_commands.Choice(name="üü£ Saturday - ‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå", value="7"),
        ]
    )
    @app_commands.describe(day='‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',share_to='‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå {@user}')
    async def study_plan_view(interaction: discord.Interaction, day: app_commands.Choice[str], share_to: discord.Member=None):
        study_plan_embed = StudyPlanEmbed(day.name, "09.00", "18.00", "‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")

        FEEDBACK_CH = [] #‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏ä‡∏•‡πÅ‡∏ô‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
        valid_channel = interaction.channel_id in FEEDBACK_CH

        if not valid_channel and FEEDBACK_CH:
            await interaction.response.send_message("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
            return

        if share_to is not None:
            await share_to.send(embed=study_plan_embed.embed, view=study_plan_embed)
            await interaction.response.send_message(f'‡πÑ‡∏î‡πâ‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏´‡πâ {share_to} ‡πÅ‡∏•‡πâ‡∏ß ‚úÖ', ephemeral=True)
        await interaction.response.send_message(embed=study_plan_embed.embed, view=study_plan_embed, ephemeral=True)


    #groupwork
    @bot.tree.command(description='Create groupwork | ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô')
    @app_commands.describe(topic='‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠', descriptions='‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°', member_amount='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å')
    async def groupwork(interaction: discord.Interaction, topic: str, descriptions: str, member_amount: int):
        # print(interaction.user.display_name)

        FEEDBACK_CH = [] #‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏ä‡∏•‡πÅ‡∏ô‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
        valid_channel = interaction.channel_id in FEEDBACK_CH

        if not valid_channel and FEEDBACK_CH:
            await interaction.response.send_message("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
            return

        initial_member = [interaction.user.display_name]
        view = GroupworkView(topic, descriptions, member_amount, initial_member)
        await interaction.response.send_message(embed=view.embed, view=view)
    

    #random
    @bot.tree.command(description='Random | ‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°')
    @app_commands.describe(entries='Options to randomize using spaces as separators. | ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏° ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏Ñ‡∏±‡πà‡∏ô')
    async def randoms(interaction: discord.Interaction, entries: str):

        FEEDBACK_CH = [] #‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏ä‡∏•‡πÅ‡∏ô‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
        valid_channel = interaction.channel_id in FEEDBACK_CH

        if not valid_channel and FEEDBACK_CH:
            await interaction.response.send_message("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
            return

        entries_list = entries.split(' ')
        random_result = random.choice(entries_list)
        await interaction.response.send_message(f'‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏∑‡∏≠ {random_result}', ephemeral=True)
    

    #poll
    @bot.tree.command(name="poll", description="Create a poll (max 5 options) | ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏•‡∏•‡πå (‡∏°‡∏≤‡∏Å‡∏™‡∏∏‡∏î 5 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å)")
    @app_commands.checks.has_permissions(manage_messages=True)
    @app_commands.describe(question="‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£", option1="‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 1", option2="‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 2", option3="‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 3", option4="‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 4",option5="‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 5", role="mention (role) | ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏Å‡∏±‡∏ö‡πÉ‡∏Ñ‡∏£ (‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó)")
    async def poll(interaction: discord.Interaction, question: str, option1: str, option2: str, option3:str=None, option4:str=None, option5:str=None, role:discord.Role=None):

        FEEDBACK_CH = [1187345770400194654] #‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏ä‡∏•‡πÅ‡∏ô‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
        valid_channel = interaction.channel_id in FEEDBACK_CH

        if not valid_channel and FEEDBACK_CH:
            await interaction.response.send_message("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
            return

        await interaction.response.send_message("‚åõ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏•‡∏•‡πå...", ephemeral=True)
        try:
            listen = [option1, option2, option3, option4, option5]
            yonice = []
            for i in listen:
                if i != None:
                    yonice.append(i)
            if role == None:
                if len(yonice) == 2:
                    emb=discord.Embed(color=discord.Colour.random(), title=f"üìÉ {question} üìÉ", description=f"1Ô∏è‚É£ : {yonice[0]}\n2Ô∏è‚É£ : {yonice[1]}")
                    emb.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1206514623445205012/poll.png?ex=65dc494e&is=65c9d44e&hm=1004d12afdc3d8e5604a1de864a78c43ee57eea693cb657e3f2de5c63cb1cc2e&')
                    msg=await interaction.channel.send(embed=emb)
                    await msg.add_reaction("1Ô∏è‚É£")
                    await msg.add_reaction("2Ô∏è‚É£")
                elif len(yonice) == 3:
                    emb=discord.Embed(color=discord.Colour.random(), title=f"üìÉ {question} üìÉ", description=f"1Ô∏è‚É£ : {yonice[0]}\n2Ô∏è‚É£ : {yonice[1]}\n3Ô∏è‚É£ : {yonice[2]}")
                    emb.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1206514623445205012/poll.png?ex=65dc494e&is=65c9d44e&hm=1004d12afdc3d8e5604a1de864a78c43ee57eea693cb657e3f2de5c63cb1cc2e&')
                    msg=await interaction.channel.send(embed=emb)
                    await msg.add_reaction("1Ô∏è‚É£")
                    await msg.add_reaction("2Ô∏è‚É£") 
                    await msg.add_reaction("3Ô∏è‚É£")
                elif len(yonice) == 4:
                    emb=discord.Embed(color=discord.Colour.random(), title=f"üìÉ {question} üìÉ", description=f"1Ô∏è‚É£ : {yonice[0]}\n2Ô∏è‚É£ : {yonice[1]}\n3Ô∏è‚É£ : {yonice[2]}\n4Ô∏è‚É£ : {yonice[3]}")
                    emb.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1206514623445205012/poll.png?ex=65dc494e&is=65c9d44e&hm=1004d12afdc3d8e5604a1de864a78c43ee57eea693cb657e3f2de5c63cb1cc2e&')
                    msg=await interaction.channel.send(embed=emb)
                    await msg.add_reaction("1Ô∏è‚É£")
                    await msg.add_reaction("2Ô∏è‚É£") 
                    await msg.add_reaction("3Ô∏è‚É£")
                    await msg.add_reaction("4Ô∏è‚É£")
                elif len(yonice) == 5:
                    emb=discord.Embed(color=discord.Colour.random(), title=f"üìÉ {question} üìÉ", description=f"1Ô∏è‚É£ : {yonice[0]}\n2Ô∏è‚É£ : {yonice[1]}\n3Ô∏è‚É£ : {yonice[2]}\n4Ô∏è‚É£ : {yonice[3]}\n5Ô∏è‚É£ : {yonice[4]}")
                    emb.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1206514623445205012/poll.png?ex=65dc494e&is=65c9d44e&hm=1004d12afdc3d8e5604a1de864a78c43ee57eea693cb657e3f2de5c63cb1cc2e&')
                    msg=await interaction.channel.send(embed=emb)
                    await msg.add_reaction("1Ô∏è‚É£")
                    await msg.add_reaction("2Ô∏è‚É£") 
                    await msg.add_reaction("3Ô∏è‚É£")
                    await msg.add_reaction("4Ô∏è‚É£")
                    await msg.add_reaction("5Ô∏è‚É£")    
            else:
                if len(yonice) == 2 :
                    emb=discord.Embed(color=discord.Colour.random(), title=f"üìÉ {question} üìÉ", description=f"1Ô∏è‚É£ : {yonice[0]}\n2Ô∏è‚É£ : {yonice[1]}")
                    emb.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1206514623445205012/poll.png?ex=65dc494e&is=65c9d44e&hm=1004d12afdc3d8e5604a1de864a78c43ee57eea693cb657e3f2de5c63cb1cc2e&')
                    msg=await interaction.channel.send(f"{role.mention}", embed=emb)
                    await msg.add_reaction("1Ô∏è‚É£")
                    await msg.add_reaction("2Ô∏è‚É£") 
                    
                elif len(yonice) == 3 :
                    emb=discord.Embed(color=discord.Colour.random(), title=f"üìÉ {question} üìÉ", description=f"1Ô∏è‚É£ : {yonice[0]}\n2Ô∏è‚É£ : {yonice[1]}\n3Ô∏è‚É£ : {yonice[2]}")
                    emb.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1206514623445205012/poll.png?ex=65dc494e&is=65c9d44e&hm=1004d12afdc3d8e5604a1de864a78c43ee57eea693cb657e3f2de5c63cb1cc2e&')
                    msg=await interaction.channel.send(f"{role.mention}", embed=emb)
                    await msg.add_reaction("1Ô∏è‚É£")
                    await msg.add_reaction("2Ô∏è‚É£") 
                    await msg.add_reaction("3Ô∏è‚É£")
                    
                elif len(yonice) == 4:
                    emb=discord.Embed(color=discord.Colour.random(), title=f"üìÉ {question} üìÉ", description=f"1Ô∏è‚É£ : {yonice[0]}\n2Ô∏è‚É£ : {yonice[1]}\n3Ô∏è‚É£ : {yonice[2]}\n4Ô∏è‚É£ : {yonice[3]}")
                    emb.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1206514623445205012/poll.png?ex=65dc494e&is=65c9d44e&hm=1004d12afdc3d8e5604a1de864a78c43ee57eea693cb657e3f2de5c63cb1cc2e&')
                    msg=await interaction.channel.send(f"{role.mention}", embed=emb)
                    await msg.add_reaction("1Ô∏è‚É£")
                    await msg.add_reaction("2Ô∏è‚É£") 
                    await msg.add_reaction("3Ô∏è‚É£")
                    await msg.add_reaction("4Ô∏è‚É£")

                elif len(yonice) == 5:
                    emb=discord.Embed(color=discord.Colour.random(), title=f"üìÉ {question} üìÉ", description=f"1Ô∏è‚É£ : {yonice[0]}\n2Ô∏è‚É£ : {yonice[1]}\n3Ô∏è‚É£ : {yonice[2]}\n4Ô∏è‚É£ : {yonice[3]}\n5Ô∏è‚É£ : {yonice[4]}")
                    emb.set_thumbnail(url='https://cdn.discordapp.com/attachments/1206514380645208104/1206514623445205012/poll.png?ex=65dc494e&is=65c9d44e&hm=1004d12afdc3d8e5604a1de864a78c43ee57eea693cb657e3f2de5c63cb1cc2e&')
                    msg=await interaction.channel.send(f"{role.mention}", embed=emb)
                    await msg.add_reaction("1Ô∏è‚É£")
                    await msg.add_reaction("2Ô∏è‚É£") 
                    await msg.add_reaction("3Ô∏è‚É£")
                    await msg.add_reaction("4Ô∏è‚É£")
                    await msg.add_reaction("5Ô∏è‚É£")
        
            await interaction.delete_original_response()
        except Exception as e:
            print(e)
            await interaction.delete_original_response()
            await interaction.followup.send("An error occured, try again later.", ephemeral=True)


    #delete commands unused
    @bot.command(name='deletecommands', aliases=['clear'])
    async def delete_commands(ctx):
        bot.tree.clear_commands(guild=None)
        await bot.tree.sync()
        await ctx.send('Unused Commands deleted.')

    
    

    bot.run(settings.DISCORD_API_SECRET, root_logger=True)#‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏ó‡πÄ‡∏Ñ‡∏ô

if __name__=="__main__":
    run()